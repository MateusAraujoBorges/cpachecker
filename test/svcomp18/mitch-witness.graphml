<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="enterLoopHead" attr.type="boolean" for="edge" id="enterLoopHead">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="sourcecode" attr.type="string" for="edge" id="sourcecode"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>/home/mitch/work/alpaca/examples/logs_alpaca/simple/iter.1/simple.iter.1.c</default>
 </key>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.7-svn 29852</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">/home/mitch/work/alpaca/examples/logs_alpaca/simple/iter.1/simple.iter.1.c</data>
  <data key="programhash">6043c12f8ff0c4243ee1da9712adc96bd7491e0f9a1483ef03f7ec30aa3788f8</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2019-07-30T12:39:46-04:00</data>
  <node id="A0">
   <data key="entry">true</data>
  </node>
  <node id="A2"/>
  <edge source="A0" target="A2">
   <data key="startline">22</data>
   <data key="endline">22</data>
   <data key="startoffset">622</data>
   <data key="endoffset">632</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="A3"/>
  <edge source="A2" target="A3">
   <data key="sourcecode">initialize_reads();</data>
   <data key="startline">24</data>
   <data key="endline">24</data>
   <data key="startoffset">639</data>
   <data key="endoffset">654</data>
   <data key="enterFunction">initialize_reads</data>
  </edge>
  <node id="A5"/>
  <edge source="A3" target="A5">
   <data key="enterLoopHead">true</data>
   <data key="sourcecode">int i = 0;</data>
   <data key="startline">8</data>
   <data key="endline">8</data>
   <data key="startoffset">178</data>
   <data key="endoffset">186</data>
   <data key="assumption">i == (0);</data>
   <data key="assumption.scope">initialize_reads</data>
  </edge>
  <node id="A6"/>
  <edge source="A5" target="A6">
   <data key="sourcecode">[!(i &lt; aca_input_num_0)]</data>
   <data key="startline">8</data>
   <data key="endline">8</data>
   <data key="startoffset">189</data>
   <data key="endoffset">207</data>
   <data key="control">condition-false</data>
   <data key="assumption">i == (0); aca_input_num_0 == (0);</data>
   <data key="assumption.scope">initialize_reads</data>
  </edge>
  <node id="sink">
   <data key="sink">true</data>
  </node>
  <edge source="A5" target="sink">
   <data key="sourcecode">[i &lt; aca_input_num_0]</data>
   <data key="startline">8</data>
   <data key="endline">8</data>
   <data key="startoffset">189</data>
   <data key="endoffset">207</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A8"/>
  <edge source="A6" target="A8">
   <data key="startline">24</data>
   <data key="endline">24</data>
   <data key="startoffset">639</data>
   <data key="endoffset">657</data>
   <data key="returnFrom">initialize_reads</data>
  </edge>
  <node id="A13"/>
  <edge source="A8" target="A13">
   <data key="sourcecode">[!(aca_input_counter_0 &lt; aca_input_num_0)]</data>
   <data key="startline">27</data>
   <data key="endline">27</data>
   <data key="startoffset">699</data>
   <data key="endoffset">735</data>
   <data key="control">condition-false</data>
   <data key="assumption">aca_input_counter_0 == (0); aca_input_num_0 == (0);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <edge source="A8" target="sink">
   <data key="sourcecode">[aca_input_counter_0 &lt; aca_input_num_0]</data>
   <data key="startline">27</data>
   <data key="endline">27</data>
   <data key="startoffset">699</data>
   <data key="endoffset">735</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A17">
   <data key="violation">true</data>
   <data key="violatedProperty">__VERIFIER_error(); called in line 38</data>
  </node>
  <edge source="A13" target="A17">
   <data key="sourcecode">[x &lt; 0]</data>
   <data key="startline">36</data>
   <data key="endline">36</data>
   <data key="startoffset">977</data>
   <data key="endoffset">981</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="A13" target="sink">
   <data key="sourcecode">[!(x &lt; 0)]</data>
   <data key="startline">36</data>
   <data key="endline">36</data>
   <data key="startoffset">977</data>
   <data key="endoffset">981</data>
   <data key="control">condition-false</data>
  </edge>
 </graph>
</graphml>