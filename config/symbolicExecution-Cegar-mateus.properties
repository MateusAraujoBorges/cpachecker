#
#  CPAchecker is a tool for configurable software verification.
#  This file is part of CPAchecker.
#
#  Copyright (C) 2007-2019  Dirk Beyer
#  All rights reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#
#  CPAchecker web page:
#    http://cpachecker.sosy-lab.org
#

# ------------------------------------------------------------------
# This configuration file uses CEGAR with symbolic value analysis of
# local integer variables and tracks constraints over them created
# by assumptions. It refines both the precisions of the
# ValueAnalysisCPA as well as the ConstraintsCPA.
# Refinement is based on ValueAnalysisRefiner's refinement
# for abstract variable assignments.
# ------------------------------------------------------------------

#include includes/symbolicExecution.properties

analysis.traversal.order = dfs
# was true
analysis.traversal.weightedDepth = false
analysis.traversal.random.exponent = 8
analysis.traversal.useReversePostorder = false
analysis.traversal.useCallstack        = false

# was true
analysis.algorithm.CEGAR = false 
cegar.refiner =
# cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner

cpa.value.refinement.restart=ROOT

cpa.value.optimizeBooleanVariables = false
cpa.value.assignEqualityAssumptions = false

cpa.constraints.removeOutdated = false

# was true
analysis.checkCounterexamples = false

# new stuff
log.consoleLevel = ALL
# log.fileLevel = ALL

counterexample.continueAfterInfeasibleError = false
cpa.automaton.breakOnTargetState = 999999999

limits.time.cpu = 60s

# stop generating gigantic reports
output.disable = true
statistics.export = true
statistics.print = true

cpa =cpa.arg.ARGCPA
ARGCPA.cpa = alearis.malebolge.cpa.ProbabilisticCPA
ProbabilisticCPA.cpa = cpa.composite.CompositeCPA 




# TODO how do I enable these conditions?

# CompositeCPA.cpas=cpa.assumptions.storage.AssumptionStorageCPA, cpa.conditions.path.PathConditionsCPA, cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.value.ValueAnalysisCPA, cpa.constraints.ConstraintsCPA
# cpa.conditions.path.condition=PathLengthCondition
# cpa.conditions.path.length.limit=3
# cpa.conditions.path.adjustment.threshold=1